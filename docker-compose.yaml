version: "2.1"
services:
  zookeeper:
    image: zookeeper:3.6.2
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "8080:8080"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOO_PORT_NUMBER: 2181
    networks:
      - kafka-cluster-tier

  kafka-1:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka-1
    hostname: kafka-1
    depends_on:
      - zookeeper
    networks:
      - kafka-cluster-tier
    ports:
      - "19091:19091"
      - "19092:19092"
    env_file:
      - kafka.env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: INSIDE://:19091,OUTSIDE://:19092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-1:19091,OUTSIDE://127.0.0.1:19092
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-1:19091 --list"]
      interval: 5s
      timeout: 10s
      retries: 15

  kafka-2:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka-2
    hostname: kafka-2
    depends_on:
      - zookeeper
      - kafka-1
    networks:
      - kafka-cluster-tier
    ports:
      - "29091:29091"
      - "29092:29092"
    env_file:
      - kafka.env
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: INSIDE://:29091,OUTSIDE://:29092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-2:29091,OUTSIDE://127.0.0.1:29092
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-2:29091 --list"]
      interval: 5s
      timeout: 10s
      retries: 15

  kafka-3:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka-3
    hostname: kafka-3
    depends_on:
      - zookeeper
      - kafka-1
    networks:
      - kafka-cluster-tier
    ports:
      - "39091:39091"
      - "39092:39092"
    env_file:
      - kafka.env
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: INSIDE://:39091,OUTSIDE://:39092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-3:39091,OUTSIDE://127.0.0.1:39092
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-3:39091 --list"]
      interval: 5s
      timeout: 10s
      retries: 15

  mongo:
    image: mongo
    restart: always
    networks:
      - kafka-cluster-tier
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - kafka-cluster-tier
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo:27017/
    depends_on:
      - mongo

  consumer_producer:  # TODO rename
    build:
      context: .
      dockerfile: consumer_producer.Dockerfile
    container_name: python_consumer_producer
    network_mode: host
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    restart: always

  ip_packets_consumer:
    build:
      context: .
      dockerfile: ip_packets_consumer.Dockerfile
    container_name: ip_packets_consumer
    network_mode: host
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    restart: always

  dashboard:
    build:
      context: .
      dockerfile: dashboard.Dockerfile
    container_name: dashboard
    networks:
      - kafka-cluster-tier
    ports:
      - "8050:8050"
    depends_on:
      - mongo
    environment:
      MONGO_HOST: mongo
    restart: always

networks:
  kafka-cluster-tier:
    driver: bridge

volumes:
  esData: { }