version: "2.1"
services:
  zookeeper:
    image: zookeeper:3.6.2
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "8080:8080"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOO_PORT_NUMBER: 2181
    networks:
      - kafka-cluster-tier

  kafka-1:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka-1
    hostname: kafka-1
    depends_on:
      - zookeeper
    networks:
      - kafka-cluster-tier
    ports:
      - "19091:19091"
      - "19092:19092"
    env_file:
      - kafka.env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: INSIDE://:19091,OUTSIDE://:19092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-1:19091,OUTSIDE://127.0.0.1:19092

  kafka-2:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka-2
    hostname: kafka-2
    depends_on:
      - zookeeper
      - kafka-1
    networks:
      - kafka-cluster-tier
    ports:
      - "29091:29091"
      - "29092:29092"
    env_file:
      - kafka.env
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: INSIDE://:29091,OUTSIDE://:29092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-2:29091,OUTSIDE://127.0.0.1:29092

  kafka-3:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka-3
    hostname: kafka-3
    depends_on:
      - zookeeper
      - kafka-1
    networks:
      - kafka-cluster-tier
    ports:
      - "39091:39091"
      - "39092:39092"
    env_file:
      - kafka.env
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: INSIDE://:39091,OUTSIDE://:39092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-3:39091,OUTSIDE://127.0.0.1:39092

#  kafka-connect-sink:
#    image: confluentinc/cp-kafka-connect:5.4.3
#    container_name: kafka-connect-sink
#    depends_on:
#      - kafka-1
#      - kafka-2
#      - kafka-3
#      - es
#    ports:
#      - 8084:8084
#    networks:
#      - kafka-cluster-tier
#    environment:
#      CONNECT_REST_PORT: 8084
#      CONNECT_BOOTSTRAP_SERVERS: kafka-1:9092
#      CONNECT_REST_ADVERTISED_HOST_NAME: localhost
#      CONNECT_GROUP_ID: de-kafka-connect-group-2
#      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
#      CONNECT_CONFIG_STORAGE_TOPIC: de-connect-sink-config
#      CONNECT_OFFSET_STORAGE_TOPIC: de-connect-sink-offset
#      CONNECT_STATUS_STORAGE_TOPIC: de-connect-sink-status
#      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
#      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
#      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#
#  es:
#    container_name: elasticsearch
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
#    ports:
#      - "9200:9200"
#    volumes:
#      - esData:/usr/share/elasticsearch/data
#    networks:
#      - kafka-cluster-tier
#    environment:
#      ES_JAVA_OPTS: "-Xmx512m -Xms32m"
#      "discovery.type": "single-node"

  consumer_producer:
    build:
      context: .
      dockerfile: consumer_producer.Dockerfile
    container_name: python_consumer_producer
    network_mode: host
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    restart: always

networks:
  kafka-cluster-tier:
    driver: bridge

volumes:
  esData: { }